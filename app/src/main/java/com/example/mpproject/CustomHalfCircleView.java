package com.example.mpproject;import android.app.ActionBar;import android.content.Context;import android.graphics.Canvas;import android.graphics.Color;import android.graphics.Paint;import android.graphics.RectF;import android.util.AttributeSet;import android.view.Gravity;import android.view.View;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;public class CustomHalfCircleView extends View {    private Paint backgroundPaint;    private Paint progressPaint;    private RectF rectF;    private int progress;    private final int minProgress = 0;    private final int maxProgress = 100;    private ImageView imageView;    private TextView textView;    public CustomHalfCircleView(Context context) {        super(context);        init();    }    public CustomHalfCircleView(Context context, AttributeSet attrs) {        super(context, attrs);        init();    }    private void init() {        imageView = new ImageView(getContext());        imageView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);        imageView.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,                LinearLayout.LayoutParams.WRAP_CONTENT));        // TextView obyektini yaratish        textView = new TextView(getContext());        textView.setTextColor(Color.WHITE);        textView.setTextSize(24);     //   textView.setTextAlignment(TEXT_ALIGNMENT_CENTER);        textView.setGravity(Gravity.CENTER);        textView.setRotation(-90);        backgroundPaint = new Paint();        backgroundPaint.setAntiAlias(true);        backgroundPaint.setStyle(Paint.Style.STROKE);        backgroundPaint.setStrokeWidth(20f);        backgroundPaint.setColor(Color.GRAY);        progressPaint = new Paint();        progressPaint.setAntiAlias(true);        progressPaint.setStyle(Paint.Style.STROKE);        progressPaint.setStrokeWidth(20f);        progressPaint.setColor(Color.parseColor("#FF9800"));        rectF = new RectF();    }    public void setProgress(int progress) {        this.progress = Math.max(minProgress, Math.min(maxProgress, progress));       // imageView.setImageResource(progress);        imageView.setBackgroundResource(R.drawable.ic_camera);        invalidate();    }    @Override    protected void onDraw(Canvas canvas) {        super.onDraw(canvas);        float centerX = getWidth() / 2f;        float centerY = getHeight() / 2f;        float radius = Math.min(centerX, centerY) - 10f;        // TextViewni joylash        float textX = centerX - textView.getPaint().measureText(String.valueOf(progress)) / 2;        float textY = centerY;     //   canvas.drawText(String.valueOf(progress), textX, textY, textView.getPaint());        rectF.set(centerX - radius, centerY - radius, centerX + radius, centerY + radius);        float startAngle = 180f;        float sweepAngle = 180f;        // Background arc        canvas.drawArc(rectF, startAngle, sweepAngle, false, backgroundPaint);        // Progress arcs        float progressSweepAngle = progress * (sweepAngle / maxProgress);        for (int i = 0; i < 4; i++) {            float currentSweepAngle = Math.min(progressSweepAngle, sweepAngle / 4);            canvas.drawArc(rectF, startAngle + i * (sweepAngle / 4), currentSweepAngle, false, progressPaint);            progressSweepAngle -= currentSweepAngle;        }        int textWidth = Math.round(textView.getPaint().measureText(String.valueOf(progress)));        int textHeight = Math.round(textView.getPaint().getTextSize());        int imageWidth = imageView.getWidth();        int imageHeight = imageView.getHeight();        int left = Math.round(centerX - Math.max(textWidth, imageWidth) / 2f);        int top = Math.round(centerY - (textHeight + imageHeight) / 2f);        int right = Math.round(centerX + Math.max(textWidth, imageWidth) / 2f);        int bottom = Math.round(centerY + (textHeight + imageHeight) / 2f);        textView.layout(left, top, right, top + textHeight);        imageView.layout(left, top + textHeight, right, bottom);    }}